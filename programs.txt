<DataGridComboBoxColumn
    x:Name="comboBoxGroupAccess"
    Header="Группа"           
    DisplayMemberPath="name"
    SelectedValuePath="id"
    SelectedValueBinding="{Binding group_access}"/>



using System;
using System.Data;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace Shop
{
    public partial class Operators : Page
    {
        private readonly Entities entity = new Entities();
        public Operators()
        {
            InitializeComponent();

            dataGrid1.ItemsSource = entity.users
                .Where(user => user.deleted == false)
                .Where(user => user.group_access == 1)
                .ToList();            

            /*var type = Convert.ChangeType("false", Type.GetType("System.Boolean"));

            var propertyInfo = dataGrid1.GetType().GetProperty("IsEnabled");
            propertyInfo.SetValue(dataGrid1, type);*/
        }
        private void SaveButton_Click(object sender, RoutedEventArgs e)
        {
            entity.SaveChanges();
        }

        private void dataGrid1_AddingNewItem(object sender, AddingNewItemEventArgs e)
        {
            e.NewItem = new user
            {
                fio = "Касса",
                group_access = 1,
                sex = 1
            };
            entity.users.Add((user) e.NewItem);
        }

        private void dataGrid1_CellEditEnding(object sender, DataGridCellEditEndingEventArgs e)
        {
            /*if (EmptyCellCheck.Check(e, "ФИО", "Карта"))
            {
                MessageBox.Show("Пустая строка!");

                e.Cancel = true;
                (sender as DataGrid).Dispatcher.BeginInvoke((Action)(() =>
                {
                    (sender as DataGrid).SelectedIndex = e.Row.GetIndex(); //select current row
                    ((UIElement) e.EditingElement.Parent).Focus(); //focus current cells
                }));
            }*/
        }

        private void dataGrid1_PreviewKeyDown(object sender, System.Windows.Input.KeyEventArgs e)
        {
            DataGrid grid = (DataGrid) sender;
            if(e.Key == System.Windows.Input.Key.Delete)
            {
                if (AskDeleteItem.Delete(dataGrid1))
                {
                    foreach (var row in grid.SelectedItems)
                    {
                        user selectedUser = (user) row;
                        entity.users.Remove(selectedUser);
                        entity.SaveChanges();
                    }
                }
                else
                {
                    e.Handled = true;
                }
            }
        }
    }
}






















<Page x:Class="Shop.Operators" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  xmlns:local="clr-namespace:Shop" mc:Ignorable="d" xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework" d:DesignHeight="450" d:DesignWidth="800" 
      Title="Справочник операторов">
    <Grid Background="White">
        <Button x:Name="save" Content="Сохранить" HorizontalAlignment="Left" Margin="713,10,0,0" VerticalAlignment="Top" Width="68" Click="SaveButton_Click" BorderThickness="1" Height="19"/>
        <DataGrid AutoGenerateColumns="False" Height="386" Margin="10,34,19,0" VerticalAlignment="Top" x:Name="dataGrid1" AutomationProperties.Name="dataGrid1" RowHeaderWidth="0" ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" CanUserAddRows="True" AddingNewItem="dataGrid1_AddingNewItem" CanUserDeleteRows="True" CellEditEnding="dataGrid1_CellEditEnding" PreviewKeyDown="dataGrid1_PreviewKeyDown">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Header="ФИО"
                    Binding="{Binding fio}"/>
                <DataGridTextColumn
                    Header="Карта"
                    Binding="{Binding card}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>













<DataGridTemplateColumn Header="День рождения" x:Name="birthdayColumn">
    <DataGridTemplateColumn.CellTemplate>
        <DataTemplate>
            <TextBlock Text="{Binding birthday, StringFormat=\{0:d\}}"/>
        </DataTemplate>
    </DataGridTemplateColumn.CellTemplate>
    <DataGridTemplateColumn.CellEditingTemplate>
        <DataTemplate x:Name="dateTemplate">
            <Grid FocusManager.FocusedElement="{Binding ElementName=datePicker}">
                <DatePicker x:Name="datePicker" SelectedDate="{Binding birthday, UpdateSourceTrigger=LostFocus}" FirstDayOfWeek="Monday" DisplayDateStart="1920-01-01" DisplayDateEnd="2100-01-01" />
            </Grid>
        </DataTemplate>
    </DataGridTemplateColumn.CellEditingTemplate>
</DataGridTemplateColumn>





<DataGrid AutoGenerateColumns="False" Margin="5" x:Name="dataGrid1" AutomationProperties.Name="dataGrid1" RowHeaderWidth="0" ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Stretch" CanUserAddRows="True" AddingNewItem="dataGrid1_AddingNewItem" CanUserDeleteRows="True" PreviewKeyDown="dataGrid1_PreviewKeyDown" RowDetailsVisibilityMode="VisibleWhenSelected" SelectionMode="Extended" SelectionUnit="Cell" SelectedCellsChanged="dataGrid1_SelectedCellsChanged" VerticalContentAlignment="Stretch" CellEditEnding="dataGrid1_CellEditEnding">
    <DataGrid.Columns>
        <DataGridTextColumn
            x:Name="fioCol"
            Header="ФИО"
            Binding="{Binding fio, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"/>
        <DataGridTextColumn
            Header="Скидка, %"
            Binding="{Binding discount, UpdateSourceTrigger=LostFocus}"/>
        <DataGridComboBoxColumn Header="Пол" x:Name="comboBox"
                            DisplayMemberPath="name"
                            SelectedValuePath="id"
                            SelectedValueBinding="{Binding sex, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
        <DataGridTemplateColumn Header="День рождения" x:Name="birthdayColumn">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding birthday, StringFormat=\{0:d\}}"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
            <DataGridTemplateColumn.CellEditingTemplate>
                <DataTemplate x:Name="dateTemplate">
                    <Grid FocusManager.FocusedElement="{Binding ElementName=datePicker}">
                        <DatePicker x:Name="datePicker" SelectedDate="{Binding birthday, UpdateSourceTrigger=LostFocus}" FirstDayOfWeek="Monday" DisplayDateStart="1920-01-01" DisplayDateEnd="2100-01-01" />
                    </Grid>
                </DataTemplate>
            </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
    </DataGrid.Columns>
    <DataGrid.RowValidationRules>
        <local:ClientsValidationRule ValidatesOnTargetUpdated="True"/>
    </DataGrid.RowValidationRules>
</DataGrid>